openapi: 3.0.3
info:
  title: Sternula Sandbox SimLab Interface
  version: 0.2.0-oas3
  description: >-
    Internal interface between Sternula VDES/MMS Sandbox and SimLab simulation
    tool. Copyright Sternula Aps, Denmark, 2019, 2020, 2021 May be used to work
    with the <a
    href="https://www.sternula.com/index.php/product-vdes-testplatform/">Sternula
    Sandbox Product</a>.
  termsOfService: 'https://www.sternula.com/index.php/general-terms-and-conditions/'
  contact:
    name: Sternula
    url: 'https://www.sternula.com'
#----------------------
# Paths
#----------------------
paths:
  /constellations:
    post:
      tags:
        - config
      summary: SimLab constellation configuration
      description: >-
        Add a VDE-SAT constellations on which simulations can be performed eg.
        the roadmap.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Constellation'
      responses:
        '201':
          description: Created
        '422':
          description: Unprocessable Entity
          
#----------------------
# Components
#----------------------
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    Constellation:
      description: The satellite constellation used by the SimLab simulator
      type: object
      properties:
        startTime:
          description: start time for the constellation. - the first satellite in operation.
          type: string
          format: date-time
        satellites:
          description: The list of satellites in the constellation
          type: array
          items:
            $ref: '#/components/schemas/satellite'
        coastStations:
          description: The list of coast stations in the constellation
          type: array
          items:
            $ref: '#/components/schemas/CoastStation'
        groundStations:
          description: The list of coast stations in the constellation
          type: array
          items:
            $ref: '#/components/schemas/GroundStation'
        
    satellite:
      description: satellite
      type: object
      properties:
        id:
          type: string
        operationDate:
          description: The date from which the satellite is operational.
          type: string
          format: date-time
          
        orbit:
          $ref: '#/components/schemas/orbit'
        radios:
          type: array
          items:
            $ref: '#/components/schemas/radio'
    orbit:
      description: Orbit defined by the six Keplerian elements plus epoch.
      type: object
      required:
        - e
        - i
        - ra
        - ap
        - ma
        - mm
        - epoch
      properties:
        e:
          description: 'Orbital eccentricity [e] (0 = circle)'
          type: number
          format: double
          minimum: 0
          maximum: 1
        i:
          description: 'Orbital Inclination [i]'
          type: number
          format: double
          minimum: 0
          maximum: 180
        ra:
          description: Longitude of the ascending node (Right Ascension of Ascending Node)
            [Ω]
          type: number
          format: double
          minimum: 0
          maximum: 360
        ap:
          description: 'Argument of Perigee [ω]'
          type: number
          format: double
          minimum: 0
          maximum: 360
        ma:
          description: 'Mean anomaly [M]'
          type: number
          format: double
          minimum: 0
          maximum: 360
        mm:
          description: 'Mean motion [rev/day].'
          type: number
          format: double
          minimum: 10
          maximum: 17
        epoch:
          description: Epoch
          type: string
          format: date-time
    radio:
      description: Radio module and antenna. Received power calculation Preceived [dBm] =
        Ptransmitted [dBm] + Lossdistance [dB] + Lossmisc [dB]
      type: object
      properties:
        id:
          description: Unique id
          type: string
          example: radio 1
        txPowerDBW:
          description: 'Transmit power [dBW]'
          type: number
          format: double
          example: -10
        txFrequency:
          description: 'Transmit radio frequency [MHz]'
          type: number
          format: double
          minimum: 0
          example: 100
        rxIfDBm:
          description: 'The receiver noise+interference (N0+I0) [dB]'
          type: number
          format: double
          example: -115
        rxMiscLossDB:
          description: Various loss (polarization, etc.) used in the received power
            calculation.
          type: number
          format: double
          example: 0
        antenna:
          oneOf:
            - $ref: '#/components/schemas/DirectionalAntenna'
            - $ref: '#/components/schemas/OmniAntenna'

    BasicAntenna:
      description: Basic parameter for an antenna.
      type: object
      properties:
        leftTilt:
          description: The tilt of the antenna in left direction from straight down (nadir).
          type: number
          format: degrees
          minimum: -180
          maximum: 180
          default: 0
        upTilt: 
          description: The tilt of the antenna in forward direction from straight down (nadir). The leftTilt is first applied and then the upTilt (like longitude used before latitude).  
          type: number
          format: degrees
          minimum: -180
          maximum: 180
          default: 0
          
    DirectionalAntenna:
      description: The directional antenna is modelled by an ellipsoid 3D shape where the distance, d, from an internal point of the ellipsoid to the surface, raised to the power of 3, d3, represents the relative gain in that direction.
      allOf: 
        - $ref: '#/components/schemas/BasicAntenna'
        - type: object
          properties:
            type:
              description: Antenna type eg. xyagi
              type: string
              enum: [directional, xyagi]
              example: directional
            spotCenterGainDB:
              description: 'The directional spot gain in [dBi]. 0.0 is a isotropic antenna.'
              type: number
              format: double
              default: 0.0
            spotWidthToHeightFactor:
              description: This allows the spot to be stretched. E.g. a value of 2 means that the width of the spot is twice the height. So, the gain in a direction 10 degrees left of the main direction will be the exact same as the gain in a direction pointing 5 degrees up. Specifying this will automatically produce the ellipsoid shape together with the spotCenterGainDB parameter.
              type: number
              format: double
              default: 1

    OmniAntenna:
      description: The omni antenna is most often used for the devices on ground. It is modelled by an ellipsoid 3D shape where the distance, d, from the center of the ellipsoid to the surface, raised to the power of 3.
      allOf: 
        - $ref: '#/components/schemas/BasicAntenna'
        - type: object
          properties:
            type:
              description: Antenna type
              type: string
              enum: [omni]
              example: omni
            horizontalGainDB:
              description: 'The gain in dBi in horizontal direction. Specifying this will automatically determine the ellipsoid shape such that it has the specified gain in the horizontal direction while maintaining a total gain in all directions similar to an isotropic antenna.'
              type: number
              format: double
              default: 0.0
          
    Mmsi:
      description: Maritime Mobile Service Identity
      type: string
      minLength: 9
      maxLength: 9
      format: mmsi
      pattern: '^\d{9}$'
      example: '220243167'
    latitude:
      description: latitude in Decimal Degrees
      type: number
      format: degrees
      minimum: -90
      maximum: 90
      example: 56.9729
    longitude:
      description: longitude in Decimal Degrees
      type: number
      format: degrees
      minimum: -180
      maximum: 180
      example: 10.3336
    Constellation_time:
      type: object
      properties:
        start_time:
          description: >-
            Constellation calculated from Sternula's roadmap and the given time.
            Used in the following VDE-SAT network simulations until changed.
          type: string
          format: date-time
        interference_conditions:
          $ref: '#/components/schemas/Interference_conditions'
        time_factor:
          $ref: '#/components/schemas/Time_factor'
    Constellation_number_of_satellites:
      type: object
      properties:
        number_of_satellites:
          description: >-
            Number of satellites used in the following VDE-SAT network
            simulations until changed. Shall not be specified if year is
            specified.
          type: integer
          minimum: 1
          maximum: 140
          example: 4
        interference_conditions:
          $ref: '#/components/schemas/Interference_conditions'
        time_factor:
          $ref: '#/components/schemas/Time_factor'
    Interference_conditions:
      description: >-
        gives the possibility to assume good or bad conditions for the
        transmissions.
      type: string
      enum:
        - bad
        - normal
        - good
      default: normal
    Time_factor:
      description: >-
        the factor applied to the time clock in the simulation. If e.g. set to
        10, a 60 minute interval in the simulated network will only take 6
        minutes in realtime. Default is a factor of 1.
      type: integer
      minimum: 1
      maximum: 10000
      example: 10
      
    Ship:
      type: object
      required:
        - MMSI
        - latitude
        - longitude
      properties:
        MMSI:
          $ref: '#/components/schemas/Mmsi'
        latitude:
          $ref: '#/components/schemas/latitude'
        longitude:
          $ref: '#/components/schemas/longitude'

    CoastStation:
      type: object
      required:
        - MMSI
        - coverage
      properties:
        MMSI:
          $ref: '#/components/schemas/Mmsi'
        coverage:
          type: array
          uniqueItems: true
          items:
            type: object
            required:
              - lon
              - lat
            properties:
              lon:
                $ref: '#/components/schemas/longitude'
              lat:
                $ref: '#/components/schemas/latitude'
          minItems: 3
          maxItems: 16
          example:
            - lon: 10.222
              lat: 56.822
            - lon: 10.222
              lat: 57.142
            - lon: 10.4042
              lat: 57.142
            - lon: 10.4042
              lat: 56.822
security:
  - BasicAuth: []
servers:
  - description: SwaggerHub API Auto Mocking
    url: >-
      https://virtserver.swaggerhub.com/overgaard/sternula-sim_lab_interface/0.2.0